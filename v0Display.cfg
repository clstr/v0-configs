# Home Display
[display_glyph chamber_icon]
data:
  ................
  ................
  .**************.
  *.......*......*
  *......*.......*
  *.....*........*
  *.....*........*
  *......**......*
  ****************
  *......**......*
  *..............*
  *..**********..*
  *..............*
  .**************.
  ................
  ................

[display_data _default_16x4 speed_factor]
position: 1, 10
text:
  {% if 'temperature_sensor chamber' in printer %}
    ~chamber_icon~
    { '%3.0f' % (printer['temperature_sensor chamber'].temperature) }
    ~degrees~
  {% else %}
    ~feedrate~
    { '{:>4.0%}'.format(printer.gcode_move.speed_factor) }
  {% endif %}
  
# Root Menu
[menu __main __octoprint]
type: disabled

[menu __main __setup __calib]
type: disabled

# Leds
# Caselights
[menu __main __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

# Fans
# Bento Mini
[menu __main __control __bentofanonoff]
type: input
enable: {'fan_generic bento_fan' in printer}
name: Bento: {'ON ' if menu.input else 'OFF'}
input: {printer['fan_generic bento_fan'].speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_FAN_SPEED FAN=bento_fan SPEED={1 if menu.input else 0}

# Root Menu
# Shutdown Host
[menu __main __shutdown]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Shutdown

[menu __main __shutdown __shutdownhost]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shutdown Host
gcode:
    SHUTDOWN_HOST